<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = choose(0,90,180,270)
life = 3
outside = true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if choose(1,2,3) = 1
{
    i = instance_create(x,y,obj_char)
    with(i)
    {
    switch(choose(1,2))
    {
    case 1: scr_skull() break
    case 2: scr_shadow() break
    }
    }
}
else if choose(1,2,3) = 1
{
    i = instance_create(x,y,obj_chest)
    i.owner = collision_point(x,y,obj_grid,false,true)
}
else if choose(1,2,3) = 1
{
    instance_create(x,y,obj_item)
}

if instance_number(obj_mapmaker) = 1
{
//Create Sight Blocks
ix = 0
repeat(1+(room_width/100))
{
iy = 0
    repeat(1+(room_height/100))
    {
        if !collision_point(ix,iy,obj_floor,false,true)
        {
            instance_create(ix,iy,obj_losRoom)
        }
        iy += 100
    }
ix += 100
}

//Temp Create Walls
with(obj_floor)
{
    if outside = false
    {
        if nBorder = 'Blocked'
        {
        if !collision_point(x,y-50,obj_wall,false,true){
        i = instance_create(x,y-50,obj_wall)
        i.sprite_index = spr_hwall
        i.owner[1] = id
        i.owner[2] = collision_point(x,y-100,obj_grid,false,true)
        
            //Book Case
            if random(100) &lt; 10
            {
            i = instance_create(x,y-45,obj_bookShelf)
            i.owner = id
            }
            else if random(100) &lt; 15
            {
            i = instance_create(x-25,y-40,obj_table)
            i.owner = id
            
            i = instance_create(x+25,y-40,obj_table)
            i.owner = id
            }
        }}
        else if random(100) &lt; 20
        {
        if !collision_point(x,y-50,obj_solid,false,true) and collision_point(x,y-100,obj_floor,false,true).outside = false{
        i = instance_create(x,y-50,choose(obj_door,obj_arch))
        i.sprite_index = spr_hminiwall
        i.owner[1] = id
        i.owner[2] = collision_point(x,y-100,obj_grid,false,true)
        }}
        
        if eBorder = 'Blocked'
        {
        if !collision_point(x+50,y,obj_wall,false,true){
        i = instance_create(x+50,y,obj_wall)
        i.sprite_index = spr_vwall
        i.owner[1] = id
        i.owner[2] = collision_point(x+100,y,obj_grid,false,true)
        }}
        else if random(100) &lt; 20
        {
        if !collision_point(x+50,y,obj_solid,false,true) and collision_point(x+100,y,obj_floor,false,true).outside = false{
        i = instance_create(x+50,y,choose(obj_door,obj_arch))
        i.sprite_index = spr_vminiwall
        i.owner[1] = id
        i.owner[2] = collision_point(x+100,y,obj_grid,false,true)
        }}
        
        if sBorder = 'Blocked'
        {
        if !collision_point(x,y+50,obj_wall,false,true){
        i = instance_create(x,y+50,obj_wall)
        i.sprite_index = spr_hwall
        i.owner[1] = id
        i.owner[2] = collision_point(x,y+100,obj_grid,false,true)
        }}
        
        if wBorder = 'Blocked'
        {
        if !collision_point(x-50,y,obj_wall,false,true){
        i = instance_create(x-50,y,obj_wall)
        i.sprite_index = spr_vwall
        i.owner[1] = id
        i.owner[2] = collision_point(x-100,y,obj_grid,false,true)
        }}
    }
}

//Temp Create Walls
with(obj_floor)
{
    if outside = true
    {
        if nBorder = 'Blocked'
        {
        if !collision_point(x,y-50,obj_solid,false,true) and !collision_point(x,y-100,obj_floor,false,true){
        i = instance_create(x,y-50,obj_battlement)
        i.sprite_index = spr_hbattlement
        i.owner[1] = id
        i.owner[2] = collision_point(x,y-100,obj_grid,false,true)
        }}
        else
        {
        if !collision_point(x,y-50,obj_solid,false,true) and collision_point(x,y-100,obj_floor,false,true).outside = false{
        instance_create(x,y-50,obj_snowFlow)
        i = instance_create(x,y-50,choose(obj_door,obj_arch))
        i.sprite_index = spr_hminiwall
        i.owner[1] = id
        i.owner[2] = collision_point(x,y-100,obj_grid,false,true)
        }}
        
        if eBorder = 'Blocked'
        {
        if !collision_point(x+50,y,obj_solid,false,true) and !collision_point(x+100,y,obj_floor,false,true){
        i = instance_create(x+50,y,obj_battlement)
        i.sprite_index = spr_vbattlement
        i.depth += 50
        i.owner[1] = id
        i.owner[2] = collision_point(x+100,y,obj_grid,false,true)
        }}
        else
        {
        if !collision_point(x+50,y,obj_solid,false,true) and collision_point(x+100,y,obj_floor,false,true).outside = false{
        instance_create(x+50,y,obj_snowFlow)
        i = instance_create(x+50,y,choose(obj_door,obj_arch))
        i.sprite_index = spr_vminiwall
        i.owner[1] = id
        i.owner[2] = collision_point(x+100,y,obj_grid,false,true)
        }}
        
        if sBorder = 'Blocked'
        {
        if !collision_point(x,y+50,obj_solid,false,true) and !collision_point(x,y+100,obj_floor,false,true){
        i = instance_create(x,y+50,obj_battlement)
        i.sprite_index = spr_hbattlement
        i.owner[1] = id
        i.owner[2] = collision_point(x,y+100,obj_grid,false,true)
        }}
        else
        {
        if !collision_point(x,y+50,obj_solid,false,true) and collision_point(x,y+100,obj_floor,false,true).outside = false{
        instance_create(x,y+50,obj_snowFlow)
        i = instance_create(x,y+50,choose(obj_door,obj_arch))
        i.sprite_index = spr_hminiwall
        i.owner[1] = id
        i.owner[2] = collision_point(x,y+100,obj_grid,false,true)
        }}
        
        if wBorder = 'Blocked'
        {
        if !collision_point(x-50,y,obj_solid,false,true) and !collision_point(x-100,y,obj_floor,false,true){
        i = instance_create(x-50,y,obj_battlement)
        i.sprite_index = spr_vbattlement
        i.depth += 50
        i.owner[1] = id
        i.owner[2] = collision_point(x-100,y,obj_grid,false,true)
        }}
        else
        {
        if !collision_point(x-50,y,obj_solid,false,true) and collision_point(x-100,y,obj_floor,false,true).outside = false{
        instance_create(x-50,y,obj_snowFlow)
        i = instance_create(x-50,y,choose(obj_door,obj_arch))
        i.sprite_index = spr_vminiwall
        i.owner[1] = id
        i.owner[2] = collision_point(x-100,y,obj_grid,false,true)
        }}
    }
}

//Establish which rooms draw lower tower walls
with(obj_floor)
{
    if !collision_point(x,y+100,obj_floor,false,true){
    towerWall = true
    }
}
}

global.i = 0
global.id = -4

//Create Start Room
with(obj_floor)
{
    if outside = false
    {
        if point_distance(x,y,obj_staircase.x,obj_staircase.y) &gt; global.i
        {
            global.i = point_distance(x,y,obj_staircase.x,obj_staircase.y)
            global.id = id
        }
    }
}

with(global.id)
{
    global.pc.x = x
    global.pc.y = y
    global.pc.alarm[0] = 10
    
    if nBorder != 'Blocked'{
    if !collision_point(x,y-50,obj_solid,false,true) and collision_point(x,y-100,obj_floor,false,true){
    i = instance_create(x,y-50,obj_door)
    i.sprite_index = spr_hminiwall
    i.owner[1] = id
    i.owner[2] = collision_point(x,y-100,obj_grid,false,true)
    }}
    
    if sBorder != 'Blocked'{
    if !collision_point(x,y+50,obj_solid,false,true) and collision_point(x,y+100,obj_floor,false,true){
    i = instance_create(x,y+50,obj_door)
    i.sprite_index = spr_hminiwall
    i.owner[1] = id
    i.owner[2] = collision_point(x,y+100,obj_grid,false,true)
    }}
    
    if eBorder != 'Blocked'{
    if !collision_point(x-50,y,obj_solid,false,true) and collision_point(x-100,y,obj_floor,false,true){
    i = instance_create(x-50,y,obj_door)
    i.sprite_index = spr_vminiwall
    i.owner[1] = id
    i.owner[2] = collision_point(x-100,y,obj_grid,false,true)
    }}
    
    if wBorder != 'Blocked'{
    if !collision_point(x+50,y,obj_solid,false,true) and collision_point(x+100,y,obj_floor,false,true){
    i = instance_create(x+50,y,obj_door)
    i.sprite_index = spr_vminiwall
    i.owner[1] = id
    i.owner[2] = collision_point(x+100,y,obj_grid,false,true)
    }}
}

with(obj_char)
{
    if pc = false and (grid = global.id or collision_point(x,y,obj_furniture,false,true) or collision_point(x,y,obj_char,false,true))
    {
        instance_destroy()
    }
}
 
with(obj_chest)
{
    if collision_point(x,y,obj_char,false,true) or collision_point(x,y,obj_chest,false,true) or collision_point(x,y,obj_item,false,true) or collision_point(x,y,obj_staircase,false,true)
    {
        instance_destroy()
    }
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !point_in_rectangle(x,y,200,200,room_width-200,room_height-200)
{
    instance_destroy()
}
else
{
    flor = collision_circle(x,y,15,obj_floor,false,true)

    if !instance_exists(flor)
    {
        flor = instance_create(x,y,obj_floor)
        flor.outside = outside
        if outside = false
        {
            obj_staircase.x = x
            obj_staircase.y = y
            obj_staircase.depth = flor.depth-1   
        } 
    }
    
    
    if random(5+life) &gt; 0
    {            
        global.i = dir
        
        //Open Up Walls
        with(flor)
        {
        if global.i = 0 {eBorder = 'Open'}
        if global.i = 90 {nBorder = 'Open'}
        if global.i = 180 {wBorder = 'Open'}
        if global.i = 270 {sBorder = 'Open'}
        }
    
        //Move
        x += lengthdir_x(100,dir)
        y += lengthdir_y(100,dir)
        
        x = round(x)
        y = round(y)
        
        //New Room
        flor = collision_circle(x,y,15,obj_floor,false,true)
        
        if !instance_exists(flor)
        {
            flor = instance_create(x,y,obj_floor)
            flor.outside = outside
            
            if outside = false
            {
                obj_staircase.x = x
                obj_staircase.y = y
                obj_staircase.depth = flor.depth-1   
            } 
        }
        
        //Open Up Walls
        with(flor)
        {
        if global.i = 180 {eBorder = 'Open'}
        if global.i = 270 {nBorder = 'Open'}
        if global.i = 0 {wBorder = 'Open'}
        if global.i = 90 {sBorder = 'Open'}
        }
        if outside = true
        {
        dir += choose(0,0,0,0,0-90,+90-90,+90)
        }
        else
        {
        dir += choose(0,0,0,-90,+90,-90,+90)
        }
        
        if dir &gt; 270
        {
        dir -= 360
        }
        else if dir &lt; 0
        {
        dir += 360
        }
        
        life -= 1
        
        if random(10-life) &gt;= 7
        {
            outside = false
        }
        
        if random(10-life) &gt;= 7
        {
            if global.bonusPaths &gt; 0
            { 
                i = instance_create(x,y,obj_mapmaker)
                i.life = 1
                global.bonusPaths -= 1
            }
        }
    }
    else
    {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
