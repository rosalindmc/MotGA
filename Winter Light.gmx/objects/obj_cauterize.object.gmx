<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_status</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>statusQuality = 'Boon'
statusType = 'Elemental'
owner = -4
life = 3

alarm[0] = 1

Sname = part_system_create()

particle1 = part_type_create();
part_type_sprite(particle1,spr_explosion,false,false,true);
part_type_size(particle1,.4,.6,0,0);
part_type_scale(particle1,1,1);
part_type_color3(particle1,65535,33023,0)
part_type_alpha3(particle1,1,0.50,0);

part_type_speed(particle1,0,40/global.frameRate,0,0);

part_type_direction(particle1,90,90,0,0);

part_type_gravity(particle1,0,270);
part_type_orientation(particle1,0,359,0,720/global.frameRate,720/global.frameRate);
part_type_blend(particle1,1);
part_type_life(particle1,.4*global.frameRate,.7*global.frameRate);

emitter1 = part_emitter_create(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(owner)
{
if life &gt; 0
{
    x = owner.bodyX
    y = owner.bodyY
       
    part_system_depth(Sname,owner.depth-10)
    part_emitter_region(Sname,emitter1,x-10,x+10,y-10,y+10,ps_shape_ellipse,ps_distr_invgaussian);
    part_emitter_burst(Sname,emitter1,particle1,20);

    owner.hp += 1
    owner.sp += 1
        
    with(obj_status)
    {
        if statusType = 'Wound'
        {
            if owner = other.owner
            {
            instance_destroy()
            }
        }
    }
    
    life -= 1
    alarm[0] = global.frameRate
}
if life &lt;= 0
{
    instance_destroy()
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
