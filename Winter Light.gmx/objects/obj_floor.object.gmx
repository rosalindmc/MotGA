<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cobblestone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>obj_grid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = round(x/50)*50
y = round(y/50)*50
nBorder = 'Blocked'
eBorder = 'Blocked'
sBorder = 'Blocked'
wBorder = 'Blocked'
outside = true
towerWall = false
vis = false
snow = false
difficult = 1
h = 0

alarm[0] = 2
depth = 1000-(y*.0001)

image_index = random(10)
image_speed = 0

i = instance_create(x,y,obj_shroud)
i.owner = id
i.depth = depth -5

//Temp Enemies
if random(100) &lt; 15 and !collision_point(x,y,obj_char,false,false)
{
    i = instance_create(x,y,obj_char)
    with(i)
    {
    switch(choose(1,2))
    {
    case 1: scr_skull() break
    case 2: scr_shadow() break
    }
    }
}

if random(100) &lt; 0
{
    i = instance_create(x,y,obj_item)
    
    if i.itemType = item_bow
    {
        repeat(4+irandom(3)+irandom(3))
        {
            instance_create(x-5+random(10),y-5+random(10),obj_arrowPickup)
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Establish Contents
if outside = true
{
    sprite_index = spr_snowTile
    snow = true
    difficult = 1.3
}
else if outside = false
{
    sprite_index = spr_cobblestone
    
    
    if random(100) &lt; 10
    {
        repeat(5+irandom(5))
        {
            i = instance_create(x-25+random(50),y-25+random(50),obj_candle)
            i.depth = depth -1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vis = false

if view_xview &lt; x+50{
if view_xview+view_wview &gt; x-50{
if view_yview &lt; y+50{
if view_yview+view_hview &gt; y-50{
    if !collision_line(x,y,global.pc.x,global.pc.y,obj_terrain,false,true)
    {
    vis = true
    }
}}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if towerWall = true
{
    if view_xview &lt; x+50 and view_xview+view_wview &gt; x-50
    {
        i = 0
        repeat(ceil((view_yview+view_hview-y-50)/20))
        {
            draw_sprite(spr_tower,min(i,10),x,y+50+(i*20))
            i += 1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
