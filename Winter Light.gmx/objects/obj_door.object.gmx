<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_3dDoor</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_terrain</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner[1] = -4
owner[2] = -4

alarm[0] = 1

image_speed = 0
image_index = random(10)
depth = -y

hp = 5
arm = 5
blood = obj_woodscrap
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(door[1])
{
instance_destroy()
}

with(door[2])
{
instance_destroy()
}

with(door[3])
{
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = spr_hminiwall
{
image_xscale = 2

i = instance_create(x+35,y,obj_wall)
i.sprite_index = spr_hminiwall
i.owner[1] = owner[1]
i.owner[2] = owner[2]

i = instance_create(x-35,y,obj_wall)
i.sprite_index = spr_hminiwall
i.owner[1] = owner[1]
i.owner[2] = owner[2]

i = instance_create(x-20,y,obj_doorVis)
i.owner[1] = owner[1]
i.owner[2] = owner[2]
i.door = id
door[1] = i

i = instance_create(x+20,y,obj_doorVis)
i.image_xscale = -1
i.owner[1] = owner[1]
i.owner[2] = owner[2]
i.door = id
door[2] = i
}
else
{
image_yscale = 2

i = instance_create(x,y+35,obj_wall)
i.sprite_index = spr_vminiwall
i.owner[1] = owner[1]
i.owner[2] = owner[2]

i = instance_create(x,y-35,obj_wall)
i.sprite_index = spr_vminiwall
i.owner[1] = owner[1]
i.owner[2] = owner[2]

i = instance_create(x+1,y-20,obj_doorVis)
i.owner[1] = owner[1]
i.owner[2] = owner[2]
i.door = id
door[1] = i

i = instance_create(x+1,y+20,obj_doorVis)
i.image_xscale = -1
i.owner[1] = owner[1]
i.owner[2] = owner[2]
i.door = id
door[2] = i
}

i = instance_create(x,y,obj_doorInteract)
i.door = id
door[3] = i


door[1].image_angle = point_direction(door[1].x,door[1].y,x+1,y)
door[2].image_angle = point_direction(door[2].x,door[2].y,x+1,y)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
