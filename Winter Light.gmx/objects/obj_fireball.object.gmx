<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_projectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_projectile_initialize()

ps1 = part_system_create()
pt1 = part_type_create()
ps1 = part_emitter_create(ps1)

colour = c_yellow
image_speed = 0
image_alpha = 0
alarm[0] = 1

dmgType = 'impact'

audio_play_sound(snd_fire,0,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Particles
if image_alpha = 1
{
//Damage and Fire
with(obj_char)
{
    if pc != 1
    {
        if distance_to_point(other.x,other.y) &lt; 40 
        {
            hp -= ceil(other.dmg/distance_to_point(other.x,other.y))
            anim[1] = scr_weaponRecoil
            animStep[1] = 0
            alarm[1] = 1
            
            i  = instance_create(x,y,obj_burning)
            i.owner = id
            
            //Stagger
            hspd += lengthdir_x(metre*20/global.frameRate,point_direction(other.x,other.y,x,y))
            vspd += lengthdir_y(metre*20/global.frameRate,point_direction(other.x,other.y,x,y))
            zspd += metre*20/global.frameRate
            canMove = false
            alarm[2] = 1*global.frameRate
            alarm[0] = 1
            
            if abs(angle_difference(point_direction(other.x,other.y,x,y),image_angle)) &gt; 180
            {
            anim[0] = scr_humanoidFlinchForward
            }
            else
            {
            anim[0] = scr_humanoidFlinchBack
            }
            animStep[0] = 0        
        }
    }
}

//Audio
audio_play_sound(snd_fireball,0,false)

i = instance_create(x,y,obj_light)
i.light = 2.5

scr_explosion()

switch(death)
{
case 1:    
if grid.snow = true
{
repeat(choose(8,12,14))
{
    i = instance_create(x,y,obj_snow)
    i.h = h+1
    
    i.speed *= 1+random(5)
    i.zspd *= 1+random(1)
}
}
else
{
repeat(choose(8,12,14))
{
    i = instance_create(x,y,obj_debris)
    i.h = h+1
    
    i.speed *= 1+random(5)
    i.zspd *= 1+random(1)
}
}

i = instance_create(x,y,obj_decal)
i.sprite_index = spr_scorch
i.image_alpha = .5+random(.4)
i.image_index = random(4)
i.depth = -y+10
repeat(choose(0,1,2,3))
{
    i = instance_create(x-10+random(20),y-5+random(10),obj_decal)
    i.sprite_index = spr_scorch
    i.image_alpha = .2+random(.6)
    i.image_index = random(4)
    i.depth = -y+10
}

break

case 2:
break

case 3:
repeat(choose(8,12,14))
{
    i = instance_create(x+lengthdir_x(-2,direction),y+lengthdir_y(-2,direction),obj_debris)
    i.h = h+1
    
    i.sprite_index = spr_blueDebris
    i.speed *= 1+random(5)
    i.zspd *= 1+random(1)
}
break
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_explosionInitialize()
sprite_index = spr_bullet
depth = -y
image_angle = direction
image_alpha = 1


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Visual
if image_alpha = 1
{
depth = -y

part_type_sprite(pt1,spr_trail,false,false,false);
part_type_size(pt1,1,1,0,0);
part_type_color1(pt1,colour);
part_type_alpha3(pt1,1,.33,0);
part_type_speed(pt1,0,0,0,0);
part_type_life(pt1,.05*global.frameRate,.10*global.frameRate);
part_type_orientation(pt1,image_angle,image_angle,0,0,false);
part_type_gravity(pt1,0,270);
part_type_scale(pt1,spd*.1,1);
part_type_blend(pt1,false);
part_system_depth(ps1,depth)
part_emitter_region(ps1,ps1,x,x,y-h,y-h,ps_shape_ellipse,ps_distr_linear);
part_emitter_burst(ps1,ps1,pt1,1);

//Fire
part_system_depth(Sname,depth)

part_emitter_region(Sname,emitter1,xprevious,x,yprevious-h,y-h,ps_shape_line,0);
part_emitter_burst(Sname,emitter1,smoke1,10);
part_emitter_burst(Sname,emitter1,particle1,10);

instance_create(x,y-h,obj_light)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(spr_muzzle,image_index,x,y-h,image_xscale*-1,image_yscale,image_angle,colour,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
